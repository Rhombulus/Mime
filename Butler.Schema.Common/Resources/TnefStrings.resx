<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ReaderComplianceInvalidPropertyLengthObject" xml:space="preserve">
    <value>Invalid property length. The property length should be at least 16 bytes long.</value>
  </data>
  <data name="ReaderComplianceInvalidFrom" xml:space="preserve">
    <value>Invalid From attribute.</value>
  </data>
  <data name="WriterInvalidOperationInvalidValueType" xml:space="preserve">
    <value>Invalid property value type.</value>
  </data>
  <data name="ReaderComplianceInvalidNamedPropertyNameLength" xml:space="preserve">
    <value>Named property name is zero or too long.</value>
  </data>
  <data name="ReaderInvalidOperationCannotConvertValue" xml:space="preserve">
    <value>Cannot convert property value to requested type.</value>
  </data>
  <data name="ReaderComplianceInvalidPropertyTypeMvBoolean" xml:space="preserve">
    <value>Unsupported property type: multi-valued Boolean.</value>
  </data>
  <data name="ReaderInvalidOperationRawAfterProp" xml:space="preserve">
    <value>This operation is not valid in the current reader state. Cannot switch to reading raw attribute data after starting to read attribute properties.</value>
  </data>
  <data name="WriterNotSupportedInvalidPropertyType" xml:space="preserve">
    <value>Invalid property type.</value>
  </data>
  <data name="ReaderInvalidOperationTextPropertyTooLong" xml:space="preserve">
    <value>Property value is too long to read in one chunk. Use ReadTextValue.</value>
  </data>
  <data name="CountOutOfRange" xml:space="preserve">
    <value>Count cannot be negative or greater than the length of the buffer.</value>
  </data>
  <data name="WriterNotSupportedInvalidMessageClass" xml:space="preserve">
    <value>invalid message class</value>
  </data>
  <data name="WriterNotSupportedCannotAddAnyPropertyToAttribute" xml:space="preserve">
    <value>Cannot add any property into current attribute.</value>
  </data>
  <data name="ReaderInvalidOperationNotNamedProperty" xml:space="preserve">
    <value>This property is not a named property.</value>
  </data>
  <data name="ReaderInvalidOperationStreamOffsetForAComputedValue" xml:space="preserve">
    <value>The stream offset cannot be retrieved for a computed property value.</value>
  </data>
  <data name="WriterInvalidOperationNotStringProperty" xml:space="preserve">
    <value>This method is used to write property values of type String8 or Unicode.</value>
  </data>
  <data name="ReaderInvalidOperationPropAfterRaw" xml:space="preserve">
    <value>This operation is not valid in the current reader state. Cannot switch to reading attribute properties after starting to read raw attribute value.</value>
  </data>
  <data name="ReaderInvalidOperationMustBeInARow" xml:space="preserve">
    <value>Must call ReadNextRow before ReadNextProperty for RecipientTable attribute.</value>
  </data>
  <data name="ReaderComplianceInvalidRowCount" xml:space="preserve">
    <value>Invalid row count.</value>
  </data>
  <data name="ReaderComplianceInvalidPropertyValueDate" xml:space="preserve">
    <value>Property date value is invalid.</value>
  </data>
  <data name="WriterInvalidOperationValueTooLongForType" xml:space="preserve">
    <value>The value for this property type is too long.</value>
  </data>
  <data name="CountTooLarge" xml:space="preserve">
    <value>Count cannot be greater than the number of bytes in the buffer from the index to the end.</value>
  </data>
  <data name="ReaderComplianceInvalidOemCodepageAttributeLength" xml:space="preserve">
    <value>The OemCodepage attribute is too short.</value>
  </data>
  <data name="ReaderComplianceAttributeValueOverflow" xml:space="preserve">
    <value>Attribute value overflows attribute.</value>
  </data>
  <data name="ReaderComplianceInvalidAttributeLevel" xml:space="preserve">
    <value>Invalid attribute level.</value>
  </data>
  <data name="ReaderInvalidOperationPropertyRawValueTooLong" xml:space="preserve">
    <value>Property value is too long to read in one chunk. Use ReadRawValue.</value>
  </data>
  <data name="ReaderInvalidOperationMustBeInAttribute" xml:space="preserve">
    <value>This operation is not valid in the current reader state. The reader must be positioned inside the attribute.</value>
  </data>
  <data name="ReaderInvalidOperationReadNextRowOnlyInRecipientTable" xml:space="preserve">
    <value>ReadNextRow can only be called for RecipientTable attribute.</value>
  </data>
  <data name="ReaderComplianceInvalidMessageClassLength" xml:space="preserve">
    <value>Invalid message class. The message class is empty or too long.</value>
  </data>
  <data name="WriterNotSupportedInvalidRecipientInformation" xml:space="preserve">
    <value>Invalid recipient.</value>
  </data>
  <data name="ReaderComplianceInvalidNamedPropertyNameNotZeroTerminated" xml:space="preserve">
    <value>Named property name is not zero-terminated.</value>
  </data>
  <data name="ReaderComplianceInvalidMessageClassNotZeroTerminated" xml:space="preserve">
    <value>Invalid message class. The message class is not properly zero-terminated.</value>
  </data>
  <data name="WriterInvalidOperationStartRowNotInRecipientTable" xml:space="preserve">
    <value>Row can only be started for RecipientTable attribute.</value>
  </data>
  <data name="ReaderComplianceInvalidAttributeChecksum" xml:space="preserve">
    <value>Invalid attribute checksum.</value>
  </data>
  <data name="ReaderComplianceInvalidMessageCodepage" xml:space="preserve">
    <value>Invalid message code page.</value>
  </data>
  <data name="ReaderComplianceTnefTruncated" xml:space="preserve">
    <value>TNEF stream is truncated.</value>
  </data>
  <data name="StreamDoesNotSupportWrite" xml:space="preserve">
    <value>This stream does not support Seek.</value>
  </data>
  <data name="WriterNotSupportedNotEnoughInformationForAttribute" xml:space="preserve">
    <value>Not enough information to compute this attribute.</value>
  </data>
  <data name="ReaderComplianceTooDeepEmbedding" xml:space="preserve">
    <value>Embedded message nesting level is too deep.</value>
  </data>
  <data name="WriterNotSupportedNotOneOffEntryId" xml:space="preserve">
    <value>Only one-off entry ID format is supported.</value>
  </data>
  <data name="ReaderComplianceInvalidPropertyTypeMvObject" xml:space="preserve">
    <value>Unsupported property type: multi-valued Object.</value>
  </data>
  <data name="ReaderComplianceInvalidConversationId" xml:space="preserve">
    <value>invalid ConversationId attribute</value>
  </data>
  <data name="IndexOutOfRange" xml:space="preserve">
    <value>Index cannot be negative or greater than the length of the buffer.</value>
  </data>
  <data name="ReaderComplianceInvalidAttributeLength" xml:space="preserve">
    <value>Invalid attribute length.</value>
  </data>
  <data name="WriterInvalidOperationValueSizeInvalidForType" xml:space="preserve">
    <value>Value size is invalid for this property type.</value>
  </data>
  <data name="ReaderInvalidOperationCannotCloseParentWhileChildOpen" xml:space="preserve">
    <value>Cannot close parent reader while nested reader is open.</value>
  </data>
  <data name="ReaderComplianceInvalidComputedPropertyLength" xml:space="preserve">
    <value>Invalid computed property length.</value>
  </data>
  <data name="ReaderInvalidOperationRowsOnlyInRecipientTable" xml:space="preserve">
    <value>Only RecipientTable attribute can have rows of properties.</value>
  </data>
  <data name="ReaderComplianceInvalidTnefVersion" xml:space="preserve">
    <value>Invalid TNEF version.</value>
  </data>
  <data name="ReaderComplianceInvalidPropertyType" xml:space="preserve">
    <value>Unsupported property type.</value>
  </data>
  <data name="WriterNotSupportedMallformedEntryId" xml:space="preserve">
    <value>Malformed entry ID.</value>
  </data>
  <data name="WriterInvalidOperation" xml:space="preserve">
    <value>The operation is not valid in the current writer state.</value>
  </data>
  <data name="ReaderComplianceInvalidPropertyTypeObjectInRecipientTable" xml:space="preserve">
    <value>Unsupported property type: Object property in RecipientTable attribute.</value>
  </data>
  <data name="ReaderInvalidOperationPropRawAfterText" xml:space="preserve">
    <value>Cannot continue reading raw value after starting to read as text.</value>
  </data>
  <data name="ReaderComplianceInvalidSchedulePlus" xml:space="preserve">
    <value>Invalid Schedule+ user ID attribute.</value>
  </data>
  <data name="WriterPropertyNameEmptyOrTooLong" xml:space="preserve">
    <value>Property name is empty or too long.</value>
  </data>
  <data name="OffsetOutOfRange" xml:space="preserve">
    <value>Offset cannot be negative or greater than the length of the buffer.</value>
  </data>
  <data name="ReaderInvalidOperationMustBeAtTheBeginningOfProperty" xml:space="preserve">
    <value>This operation is not valid in the current reader state. The reader must be positioned at the beginning of the property.</value>
  </data>
  <data name="ReaderInvalidOperationNotObjectProperty" xml:space="preserve">
    <value>This property is not an object property.</value>
  </data>
  <data name="WriterNotSupportedUnicodeOneOffEntryId" xml:space="preserve">
    <value>Unicode one-off entry IDs are not supported.</value>
  </data>
  <data name="ReaderComplianceInvalidPropertyCount" xml:space="preserve">
    <value>Invalid Count property.</value>
  </data>
  <data name="ReaderInvalidOperationMustBeAtTheBeginningOfAttribute" xml:space="preserve">
    <value>This operation is not valid in the current reader state. The reader must be positioned at the beginning of the attribute.</value>
  </data>
  <data name="WriterInvalidOperationObjectInRecipientTable" xml:space="preserve">
    <value>Cannot write object properties in the recipient table attribute.</value>
  </data>
  <data name="ReaderComplianceInvalidPropertyTypeError" xml:space="preserve">
    <value>Unsupported property type: Error.</value>
  </data>
  <data name="WriterNotSupportedCannotAddThisPropertyToAttributeMoreThanOnce" xml:space="preserve">
    <value>This property has already been written.</value>
  </data>
  <data name="StreamDoesNotSupportSeek" xml:space="preserve">
    <value>This stream does not support Seek.</value>
  </data>
  <data name="StreamDoesNotSupportRead" xml:space="preserve">
    <value>This stream does not support Read.</value>
  </data>
  <data name="WriterInvalidOperationStartNamedPropertyNoName" xml:space="preserve">
    <value>Use a StartProperty that accepts a name argument to start named property.</value>
  </data>
  <data name="WriterInvalidOperationMoreThanOneValueForSingleValuedProperty" xml:space="preserve">
    <value>Cannot write more than one value for a single-valued property.</value>
  </data>
  <data name="WriterInvalidOperationNotObjectProperty" xml:space="preserve">
    <value>This method is used to write property values of type Object.</value>
  </data>
  <data name="WriterInvalidOperationStartNormalPropertyWithName" xml:space="preserve">
    <value>The property tag for this method should represent a named property.</value>
  </data>
  <data name="WriterInvalidOperationUnicodeRawValueForLegacyAttribute" xml:space="preserve">
    <value>Cannot write raw value for a legacy attribute property specified as Unicode.</value>
  </data>
  <data name="ReaderComplianceInvalidDateOrTimeValue" xml:space="preserve">
    <value>Invalid date or time value.</value>
  </data>
  <data name="ReaderInvalidOperationPropTextAfterRaw" xml:space="preserve">
    <value>Cannot continue reading as text after starting to read raw value.</value>
  </data>
  <data name="ReaderComplianceInvalidTnefSignature" xml:space="preserve">
    <value>Invalid TNEF signature.</value>
  </data>
  <data name="WriterInvalidOperationRawDataAfterText" xml:space="preserve">
    <value>Cannot write raw value after writing portion as text.</value>
  </data>
  <data name="WriterInvalidOperationTextAfterRawData" xml:space="preserve">
    <value>Cannot write value as text after writing portion as raw data.</value>
  </data>
  <data name="ReaderComplianceInvalidTnefVersionAttributeLength" xml:space="preserve">
    <value>TnefVersion attribute is too short.</value>
  </data>
  <data name="WriterInvalidMessageCodepage" xml:space="preserve">
    <value>Invalid message codepage.</value>
  </data>
  <data name="WriterInvalidOperationMvObject" xml:space="preserve">
    <value>Cannot write multivalued object properties.</value>
  </data>
  <data name="WriterNotSupportedLegacyAttributeTooLong" xml:space="preserve">
    <value>Legacy attribute value is too long.</value>
  </data>
  <data name="ReaderComplianceInvalidPropertyLength" xml:space="preserve">
    <value>Invalid property length. The property length is less than zero or overflows the attribute length.</value>
  </data>
  <data name="ReaderInvalidOperationNotSeekableCannotUseRewind" xml:space="preserve">
    <value>Unable to use Rewind. The TNEF stream is not seekable.</value>
  </data>
  <data name="WriterInvalidOperationChildActive" xml:space="preserve">
    <value>Child writer object must be closed before continuing with this writer object.</value>
  </data>
  <data name="InvalidMessageCodePage" xml:space="preserve">
    <value>Invalid message code page.</value>
  </data>
  <data name="WriterNotSupportedCannotAddThisPropertyToAttribute" xml:space="preserve">
    <value>Cannot write this property to current attribute.</value>
  </data>
  <data name="ReaderInvalidOperationMustBeInPropertyValue" xml:space="preserve">
    <value>This operation is not valid in the current reader state. The reader must be positioned inside the property value.</value>
  </data>
  <data name="WriterInvalidOperationInvalidPropertyType" xml:space="preserve">
    <value>The property type is invalid or not supported in TNEF.</value>
  </data>
  <data name="ReaderInvalidOperationMustBeInProperty" xml:space="preserve">
    <value>This operation is not valid in the current reader state. The reader must be positioned inside the property value.</value>
  </data>
  <data name="ReaderInvalidOperationChildActive" xml:space="preserve">
    <value>Child reader object must be closed before continuing with this reader object.</value>
  </data>
  <data name="ReaderComplianceInvalidPropertyValueCount" xml:space="preserve">
    <value>Invalid property value count.</value>
  </data>
  <data name="ReaderInvalidOperationNotEmbeddedMessage" xml:space="preserve">
    <value>This operation is only supported for object properties that are embedded messages.</value>
  </data>
  <data name="WriterInvalidOperationNamedPropertyInLegacyAttribute" xml:space="preserve">
    <value>Cannot write named properties in legacy attribute.</value>
  </data>
</root>